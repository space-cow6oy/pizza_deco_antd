{"ast":null,"code":"var _jsxFileName = \"/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/Sort/Sort.tsx\",\n  _s = $RefreshSig$();\nimport { setActiveSortType } from '../../redux/slices/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Select, Flex } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sort = ( /*{ sortType, setSortType, sortTypes }*/\n) => {\n  _s();\n  /**========================================================================\n   * !                              SORTING logic\n   *   create array of sorting types (sortTypes)\n   *   import setActiveSortType action from  '../../redux/slices/filterSlice'\n   *   select activeSortType from store (useSelector) (state.filter.activeSortType)\n   *   create function that set ActiveSortType and close popup (setIsVisible(false))\n   *   render sortTypes, create logic of onClick etc...\n   *========================================================================**/\n  const sortTypes = [{\n    value: 'rating',\n    label: 'популярности'\n  }, {\n    value: 'price',\n    label: 'цене'\n  }, {\n    value: 'title',\n    label: 'алфавиту'\n  }];\n  // const activeSortType = useSelector((state: any) => state.filter.activeSortType);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justify: \"flex-end\",\n    align: \"center\",\n    gap: \"small\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"\\u043F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u043D\\u043E\\u0441\\u0442\\u0438\",\n      style: {\n        width: 140\n      },\n      options: sortTypes,\n      onChange: value => dispatch(setActiveSortType(value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Sort, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Sort;\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["setActiveSortType","useDispatch","Select","Flex","jsxDEV","_jsxDEV","Sort","_s","sortTypes","value","label","dispatch","justify","align","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","style","width","options","onChange","_c","$RefreshReg$"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/Sort/Sort.tsx"],"sourcesContent":["import { setActiveSortType } from '../../redux/slices/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Select, Flex } from 'antd';\n\nexport const Sort = (/*{ sortType, setSortType, sortTypes }*/) => {\n  /**========================================================================\n   * !                              SORTING logic\n   *   create array of sorting types (sortTypes)\n   *   import setActiveSortType action from  '../../redux/slices/filterSlice'\n   *   select activeSortType from store (useSelector) (state.filter.activeSortType)\n   *   create function that set ActiveSortType and close popup (setIsVisible(false))\n   *   render sortTypes, create logic of onClick etc...\n   *========================================================================**/\n  const sortTypes = [\n    { value: 'rating', label: 'популярности' },\n    { value: 'price', label: 'цене' },\n    { value: 'title', label: 'алфавиту' },\n  ];\n  // const activeSortType = useSelector((state: any) => state.filter.activeSortType);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex justify=\"flex-end\" align=\"center\" gap=\"small\">\n      <span>Сортировка по</span>\n      <Select\n        defaultValue=\"популярности\"\n        style={{ width: 140 }}\n        options={sortTypes}\n        onChange={(value) => dispatch(setActiveSortType(value))}\n      />\n    </Flex>\n  );\n};\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAqB,aAAa;AACtD,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,IAAI,GAAGA,CAAA,CAAC;AAAA,KAA6C;EAAAC,EAAA;EAChE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC1C;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAO,CAAC,EACjC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAW,CAAC,CACtC;EACD;EACA,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,oBACEI,OAAA,CAACF,IAAI;IAACS,OAAO,EAAC,UAAU;IAACC,KAAK,EAAC,QAAQ;IAACC,GAAG,EAAC,OAAO;IAAAC,QAAA,gBACjDV,OAAA;MAAAU,QAAA,EAAM;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1Bd,OAAA,CAACH,MAAM;MACLkB,YAAY,EAAC,0EAAc;MAC3BC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MACtBC,OAAO,EAAEf,SAAU;MACnBgB,QAAQ,EAAGf,KAAK,IAAKE,QAAQ,CAACX,iBAAiB,CAACS,KAAK,CAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACZ,EAAA,CA5BWD,IAAI;EAAA,QAeEL,WAAW;AAAA;AAAAwB,EAAA,GAfjBnB,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}