{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  count: 0,\n  price: 0\n};\n//id, category, imageUrl, price, rating, sizes, title, types\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        id,\n        imageUrl,\n        price,\n        activeSize,\n        title,\n        activeType\n      } = action.payload;\n      const itemToUpdate = state.items.find(item => {\n        return item.id === id && item.activeSize === activeSize && item.activeType === activeType;\n      });\n      if (itemToUpdate) {\n        itemToUpdate.count++;\n        state.count++;\n        state.price = state.price + action.payload.price;\n      } else {\n        state.items.push(action.payload);\n        state.count++;\n        state.price = state.price + action.payload.price;\n      }\n    },\n    addItem(state, action) {\n      state.items[action.payload.index].count++;\n      state.count++;\n      state.price = state.price + action.payload.price;\n    },\n    removeItem(state, action) {\n      if (state.items[action.payload.index].count > 1) {\n        state.items[action.payload.index].count--;\n        state.count--;\n        state.price = state.price - action.payload.price;\n      } else {\n        state.items.splice(action.payload.index, 1);\n        state.count--;\n        state.price = state.price - action.payload.price;\n      }\n    },\n    clearCart(state) {\n      state.items = [];\n      state.price = 0;\n      state.count = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  addItem,\n  removeItem,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","count","price","cartSlice","name","reducers","addToCart","state","action","id","imageUrl","activeSize","title","activeType","payload","itemToUpdate","find","item","push","addItem","index","removeItem","splice","clearCart","actions","reducer"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nexport type CartItemType = {\n  id: string;\n  imageUrl: string;\n  price: number;\n  activeSize: number;\n  title: string;\n  activeType: string;\n  count: number;\n};\n\ninterface CartState {\n  items: CartItemType[];\n  count: number;\n  price: number;\n}\n\ntype AddItemProp = {\n  index: number;\n  price: number;\n};\n\nconst initialState: CartState = {\n  items: [],\n  count: 0,\n  price: 0,\n};\n//id, category, imageUrl, price, rating, sizes, title, types\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const { id, imageUrl, price, activeSize, title, activeType } = action.payload;\n      const itemToUpdate = state.items.find((item) => {\n        return item.id === id && item.activeSize === activeSize && item.activeType === activeType;\n      });\n      if (itemToUpdate) {\n        itemToUpdate.count++;\n        state.count++;\n        state.price = state.price + action.payload.price;\n      } else {\n        state.items.push(action.payload);\n        state.count++;\n        state.price = state.price + action.payload.price;\n      }\n    },\n    addItem(state, action: PayloadAction<AddItemProp>) {\n      state.items[action.payload.index].count++;\n      state.count++;\n      state.price = state.price + action.payload.price;\n    },\n\n    removeItem(state, action: PayloadAction<AddItemProp>) {\n      if (state.items[action.payload.index].count > 1) {\n        state.items[action.payload.index].count--;\n        state.count--;\n        state.price = state.price - action.payload.price;\n      } else {\n        state.items.splice(action.payload.index, 1);\n        state.count--;\n        state.price = state.price - action.payload.price;\n      }\n    },\n\n    clearCart(state) {\n      state.items = []\n      state.price = 0;\n      state.count = 0;\n    }\n  },\n});\n\nexport const { addToCart, addItem, removeItem, clearCart } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAuB7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE;AACT,CAAC;AACD;;AAEA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAM;QAAEC,EAAE;QAAEC,QAAQ;QAAER,KAAK;QAAES,UAAU;QAAEC,KAAK;QAAEC;MAAW,CAAC,GAAGL,MAAM,CAACM,OAAO;MAC7E,MAAMC,YAAY,GAAGR,KAAK,CAACP,KAAK,CAACgB,IAAI,CAAEC,IAAI,IAAK;QAC9C,OAAOA,IAAI,CAACR,EAAE,KAAKA,EAAE,IAAIQ,IAAI,CAACN,UAAU,KAAKA,UAAU,IAAIM,IAAI,CAACJ,UAAU,KAAKA,UAAU;MAC3F,CAAC,CAAC;MACF,IAAIE,YAAY,EAAE;QAChBA,YAAY,CAACd,KAAK,EAAE;QACpBM,KAAK,CAACN,KAAK,EAAE;QACbM,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACM,OAAO,CAACZ,KAAK;MAClD,CAAC,MAAM;QACLK,KAAK,CAACP,KAAK,CAACkB,IAAI,CAACV,MAAM,CAACM,OAAO,CAAC;QAChCP,KAAK,CAACN,KAAK,EAAE;QACbM,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACM,OAAO,CAACZ,KAAK;MAClD;IACF,CAAC;IACDiB,OAAOA,CAACZ,KAAK,EAAEC,MAAkC,EAAE;MACjDD,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACM,OAAO,CAACM,KAAK,CAAC,CAACnB,KAAK,EAAE;MACzCM,KAAK,CAACN,KAAK,EAAE;MACbM,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACM,OAAO,CAACZ,KAAK;IAClD,CAAC;IAEDmB,UAAUA,CAACd,KAAK,EAAEC,MAAkC,EAAE;MACpD,IAAID,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACM,OAAO,CAACM,KAAK,CAAC,CAACnB,KAAK,GAAG,CAAC,EAAE;QAC/CM,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACM,OAAO,CAACM,KAAK,CAAC,CAACnB,KAAK,EAAE;QACzCM,KAAK,CAACN,KAAK,EAAE;QACbM,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACM,OAAO,CAACZ,KAAK;MAClD,CAAC,MAAM;QACLK,KAAK,CAACP,KAAK,CAACsB,MAAM,CAACd,MAAM,CAACM,OAAO,CAACM,KAAK,EAAE,CAAC,CAAC;QAC3Cb,KAAK,CAACN,KAAK,EAAE;QACbM,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACM,OAAO,CAACZ,KAAK;MAClD;IACF,CAAC;IAEDqB,SAASA,CAAChB,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACL,KAAK,GAAG,CAAC;MACfK,KAAK,CAACN,KAAK,GAAG,CAAC;IACjB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,SAAS;EAAEa,OAAO;EAAEE,UAAU;EAAEE;AAAU,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAC9E,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}