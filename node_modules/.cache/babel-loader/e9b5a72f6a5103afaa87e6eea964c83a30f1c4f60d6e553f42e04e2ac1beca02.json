{"ast":null,"code":"var _jsxFileName = \"/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Flex, Card, Radio } from 'antd';\n\n// import { Input, Radio, Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PizzaBlock = ({\n  id,\n  imageUrl,\n  price,\n  sizes,\n  title,\n  types\n}) => {\n  _s();\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n  const firstRenderPizzaTypes = types.map(item => pizzaTypes[item]);\n  // const firstRenderPizzaSizes = sizes.\n\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.cart.items);\n  const {\n    Meta\n  } = Card;\n  console.log(types);\n  const cartClick = () => {\n    dispatch(addToCart({\n      id: realId.current,\n      imageUrl,\n      price,\n      activeSize: realSize,\n      title,\n      activeType: pizzaTypes[activeType],\n      count: 1\n    }));\n  };\n  const onChangeType = ({\n    target: {\n      value\n    }\n  }) => {\n    console.log('radio1 checked', value);\n    setActiveType(value);\n  };\n  const onChangeSize = ({\n    target: {\n      value\n    }\n  }) => {\n    console.log('radio2 checked', value);\n    setActiveSize(value);\n  };\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n    // onChange={ (e: RadioChangeEvent) => setActiveType(e.target.value)}\n    _jsxDEV(Card, {\n      hoverable: true,\n      style: {\n        width: 300\n      },\n      cover: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: title,\n        src: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 51\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"space-between\",\n        align: \"start\",\n        vertical: true,\n        gap: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"start\",\n          vertical: true,\n          gap: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(Meta, {\n            title: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n            options: firstRenderPizzaTypes,\n            onChange: onChangeType,\n            value: activeType,\n            optionType: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n            options: sizes,\n            onChange: onChangeSize,\n            value: activeSize,\n            optionType: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u043E\\u0442 \", price, \" \\u0420\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: cartClick,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(PizzaBlock, \"gmb8zW0s81yMedf+S20YzbeffMk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PizzaBlock;\nvar _c;\n$RefreshReg$(_c, \"PizzaBlock\");","map":{"version":3,"names":["useRef","useState","addToCart","useDispatch","useSelector","Button","Flex","Card","Radio","jsxDEV","_jsxDEV","PizzaBlock","id","imageUrl","price","sizes","title","types","_s","pizzaTypes","firstRenderPizzaTypes","map","item","activeType","setActiveType","activeSize","setActiveSize","realSize","realId","dispatch","items","state","cart","Meta","console","log","cartClick","current","count","onChangeType","target","value","onChangeSize","hoverable","style","width","cover","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","children","justify","align","vertical","gap","Group","options","onChange","optionType","onClick","_c","$RefreshReg$"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx"],"sourcesContent":["import { FC, useCallback, useRef, useState } from 'react';\nimport styles from './PizzaBlock.module.scss';\nimport cl from 'classnames';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Flex, Card, Radio } from 'antd';\nimport type { CheckboxOptionType, RadioChangeEvent } from 'antd';\nimport { CheckboxValueType } from 'antd/es/checkbox/Group';\n// import { Input, Radio, Space } from 'antd';\n\ntype PizzaBlockProps = {\n  id: string;\n  imageUrl: string;\n  price: number;\n  sizes: number[];\n  title: string;\n  types: number[];\n};\n\nexport const PizzaBlock: FC<PizzaBlockProps> = ({ id, imageUrl, price, sizes, title, types }) => {\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n  const firstRenderPizzaTypes = types.map((item) => pizzaTypes[item]);\n  // const firstRenderPizzaSizes = sizes.\n\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n\n  const dispatch = useDispatch();\n  const items = useSelector((state: any) => state.cart.items);\n\n  const { Meta } = Card;\n\n  console.log(types);\n\n  const cartClick = () => {\n    dispatch(\n      addToCart({\n        id: realId.current,\n        imageUrl,\n        price,\n        activeSize: realSize,\n        title,\n        activeType: pizzaTypes[activeType],\n        count: 1,\n      }),\n    );\n  };\n\n  type Option = (string | number | CheckboxOptionType<CheckboxValueType>) | undefined;\n\n  const onChangeType = ({ target: { value } }: RadioChangeEvent) => {\n    console.log('radio1 checked', value);\n    setActiveType(value);\n  };\n\n  const onChangeSize = ({ target: { value } }: RadioChangeEvent) => {\n    console.log('radio2 checked', value);\n    setActiveSize(value);\n  };\n\n  return (\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n    // onChange={ (e: RadioChangeEvent) => setActiveType(e.target.value)}\n\n    <Card hoverable style={{ width: 300 }} cover={<img alt={title} src={imageUrl} />}>\n      \n      <Flex justify=\"space-between\" align=\"start\" vertical gap='small'>\n      <Flex justify=\"space-between\" align=\"start\" vertical gap='small'>\n      <Meta title={title} />\n\n        <Radio.Group\n          options={firstRenderPizzaTypes}\n          onChange={onChangeType}\n          value={activeType}\n          optionType=\"button\"\n        />\n\n        <Radio.Group\n          options={sizes}\n          onChange={onChangeSize}\n          value={activeSize}\n          optionType=\"button\"\n        />\n\n      </Flex>\n\n      <Flex >\n        <div>от {price} Р</div>\n        <Button onClick={cartClick}>\n          <span>Добавить </span>\n        </Button>\n\n      </Flex>\n\n      </Flex>\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}