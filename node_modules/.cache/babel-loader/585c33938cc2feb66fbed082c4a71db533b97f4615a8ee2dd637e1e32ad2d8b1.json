{"ast":null,"code":"var _jsxFileName = \"/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PizzaBlock = ({\n  id,\n  imageUrl,\n  price,\n  sizes,\n  title,\n  types\n}) => {\n  _s();\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.cart.items);\n  const {\n    Meta\n  } = Card;\n  console.log(types);\n  const cartClick = () => {\n    dispatch(addToCart({\n      id: realId.current,\n      imageUrl,\n      price,\n      activeSize: realSize,\n      title,\n      activeType: pizzaTypes[activeType],\n      count: 1\n    }));\n\n    // const activeItem: any = items.filter((item: any)=>{\n    //   console.log('item', item)\n    //   return item.id === realId && item.activeSize === realSize && item.activeType === pizzaTypes[activeSize]\n    // })\n    // // console.log('activeItem' , activeItem)\n    // if(!activeItem.length === 0 ){//          ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR\n    //   console.log('count', activeItem.count)\n    //   return activeItem.count\n    // }else {\n    //   return ''\n    // }\n  };\n\n  // setActiveCount()\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n    _jsxDEV(Card\n    // hoverable\n    , {\n      style: {\n        width: 240\n      },\n      cover: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: title,\n        src: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 12\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Meta, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(PizzaBlock, \"gmb8zW0s81yMedf+S20YzbeffMk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PizzaBlock;\nvar _c;\n$RefreshReg$(_c, \"PizzaBlock\");","map":{"version":3,"names":["useRef","useState","addToCart","useDispatch","useSelector","Card","jsxDEV","_jsxDEV","PizzaBlock","id","imageUrl","price","sizes","title","types","_s","pizzaTypes","activeType","setActiveType","activeSize","setActiveSize","realSize","realId","dispatch","items","state","cart","Meta","console","log","cartClick","current","count","style","width","cover","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx"],"sourcesContent":["import { FC, useCallback, useRef, useState } from 'react';\nimport styles from './PizzaBlock.module.scss';\nimport cl from 'classnames';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from \"antd\";\nimport { Card } from \"antd\";\n\ntype PizzaBlockProps = {\n  id: string;\n  imageUrl: string;\n  price: number;\n  sizes: number[];\n  title: string;\n  types: number[];\n};\n\nexport const PizzaBlock: FC<PizzaBlockProps> = ({ id, imageUrl, price, sizes, title, types }) => {\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n\n  const dispatch = useDispatch();\n  const items = useSelector((state: any) => state.cart.items);\n\n  const { Meta } = Card;\n\n\n  console.log(types);\n\n  const cartClick = () => {\n    dispatch(\n      addToCart({\n        id: realId.current,\n        imageUrl,\n        price,\n        activeSize: realSize,\n        title,\n        activeType: pizzaTypes[activeType],\n        count: 1,\n      }),\n    );\n\n    // const activeItem: any = items.filter((item: any)=>{\n    //   console.log('item', item)\n    //   return item.id === realId && item.activeSize === realSize && item.activeType === pizzaTypes[activeSize]\n    // })\n    // // console.log('activeItem' , activeItem)\n    // if(!activeItem.length === 0 ){//          ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR ERROR\n    //   console.log('count', activeItem.count)\n    //   return activeItem.count\n    // }else {\n    //   return ''\n    // }\n  };\n\n  // setActiveCount()\n\n  return (\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n\n    <Card\n    // hoverable\n    style={{ width: 240 }}\n    cover={<img alt={title} src={imageUrl} />}\n  >\n    <span></span>\n    <Meta title={title}  />\n  </Card>\n\n  );\n};\n"],"mappings":";;AAAA,SAA0BA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAGzD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW5B,OAAO,MAAMC,UAA+B,GAAGA,CAAC;EAAEC,EAAE;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/F,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC;EAE7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMoB,QAAQ,GAAGT,KAAK,CAACO,UAAU,CAAC;EAClC,MAAMG,MAAM,GAAGtB,MAAM,CAACS,EAAE,CAAC;EAEzB,MAAMc,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,KAAK,GAAGpB,WAAW,CAAEqB,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAE3D,MAAM;IAAEG;EAAK,CAAC,GAAGtB,IAAI;EAGrBuB,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;EAElB,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtBP,QAAQ,CACNrB,SAAS,CAAC;MACRO,EAAE,EAAEa,MAAM,CAACS,OAAO;MAClBrB,QAAQ;MACRC,KAAK;MACLQ,UAAU,EAAEE,QAAQ;MACpBR,KAAK;MACLI,UAAU,EAAED,UAAU,CAACC,UAAU,CAAC;MAClCe,KAAK,EAAE;IACT,CAAC,CACH,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED;;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAzB,OAAA,CAACF;IACD;IAAA;MACA4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MACtBC,KAAK,eAAE5B,OAAA;QAAK6B,GAAG,EAAEvB,KAAM;QAACwB,GAAG,EAAE3B;MAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAC,QAAA,gBAE1CnC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACblC,OAAA,CAACoB,IAAI;QAACd,KAAK,EAAEA;MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;AAGT,CAAC;AAAC1B,EAAA,CA3GWP,UAA+B;EAAA,QASzBL,WAAW,EACdC,WAAW;AAAA;AAAAuC,EAAA,GAVdnC,UAA+B;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}