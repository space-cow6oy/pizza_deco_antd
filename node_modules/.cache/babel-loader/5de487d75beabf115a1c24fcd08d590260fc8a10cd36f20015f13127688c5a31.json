{"ast":null,"code":"var _jsxFileName = \"/home/artem/github_space/pizza_antd/pizza_deco_antd/src/pages/Home/Home.tsx\",\n  _s = $RefreshSig$();\nimport s from './Home.module.scss';\nimport { PizzaBlock } from '../../components/PizzaBlock/PizzaBlock';\nimport { Menu } from '../../components/Menu/Menu';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // const UpdateCurrentPageValue = (n: number) => {\n  //   setCurrentPage(n)\n  // }\n\n  const page = `page=${currentPage}`;\n\n  /**================================================================================================\n   * !                                          SORTING logic\n   *   select activeSortType from store useSelect (state.filter.activeSortType)\n   *   create object sortBy that will be determine connection between activeSortType and backendSortType\n   *   creating variable for inserting it as url parametr\n   *   passing activeSortType to useEffect for requesting new data every time input has changed\n   *================================================================================================**/\n  const activeSortType = useSelector(state => state.filter.activeSortType);\n  const sortBy = {\n    популярности: 'rating',\n    цене: 'price',\n    алфавиту: 'title'\n  };\n  const sort = `sortBy=${sortBy[activeSortType]}`;\n  /*========================================== END OF Sorting ==========================================*/\n\n  /**========================================================================\n   * !                              SEARCHING logic\n   *   select searchValue from store useSelect (state.search.searchValue)\n   *   creating variable for inserting it as url parametr\n   *   passing searchValue to useEffect for requesting new data every time input has changed\n   *========================================================================**/\n  const searchValue = useSelector(state => state.search.searchValue);\n  const search = `search=${searchValue}`;\n  /*============================ END OF SEARCHING LOGIC ============================*/\n\n  /**========================================================================\n   * !                              FILTERING logic\n   *   select activeCategory from store useSelector (state.filter.activeCategory)\n   *   creating variable for inserting it as url parametr\n   *   passing activeCategory to useEffect for requesing data everytime input has changed\n   *========================================================================**/\n  const activeCategory = useSelector(state => state.filter.activeCategory);\n  const category = activeCategory === 0 ? '' : `category=${activeCategory}`;\n  /*============================ END OF FILTERING LOGIC ============================*/\n\n  // useEffect(() => {\n  //   fetch(\n  //     `https://65dc9b63e7edadead7ec86ae.mockapi.io/items?&${page}&limit=5&${category}&${sort}&${search}`,\n  //   )\n  //     .then((res) => {\n  //       setIsLoading(true);\n  //       return res.json();\n  //     })\n  //     .then((res) => {\n  //       setTimeout(() => {\n  //         setItems(res);\n  //         setIsLoading(false);\n  //       }, 500);\n  //     });\n  // }, [activeCategory, activeSortType, searchValue, currentPage]);\n\n  // let pizzas = items\n  //   .filter((item) => {\n  //     return item['title'].toLowerCase().includes(searchValue.toLowerCase())\n  //   })\n  //   .map((item, index) => <PizzaBlock key={item.id} {...item} />);\n\n  useEffect(() => {\n    axios.get(`https://65dc9b63e7edadead7ec86ae.mockapi.io/items?&${page}&limit=5&${category}&${sort}&${search}`).then(res => {\n      setTimeout(() => {\n        setItems(res.data);\n        setIsLoading(false);\n      }, 500);\n    }).catch(err => {\n      // console.log(err.response.data)\n      setItems(err.response.data);\n    });\n  }, [activeCategory, activeSortType, searchValue, currentPage]);\n\n  // console.log('HOME RENDER')\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), items == 'Not found' ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.pizza__list,\n      children: isLoading ? [...new Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(Loader, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 53\n      }, this)) : items.map((item, index) => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n        ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 44\n      }, this)) /* pizzas */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"lcm3qB4BCPJ7SQwakimJprCq4Js=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["s","PizzaBlock","Menu","Loader","Pagination","useEffect","useState","useSelector","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","items","setItems","isLoading","setIsLoading","currentPage","setCurrentPage","page","activeSortType","state","filter","sortBy","популярности","цене","алфавиту","sort","searchValue","search","activeCategory","category","get","then","res","setTimeout","data","catch","err","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","pizza__list","Array","map","_","index","item","_c","$RefreshReg$"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/pages/Home/Home.tsx"],"sourcesContent":["import s from './Home.module.scss';\nimport { PizzaBlock } from '../../components/PizzaBlock/PizzaBlock';\nimport { Menu } from '../../components/Menu/Menu';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Pagination } from '../../components/Pagination/Pagination';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { RootState } from '../../redux/store';\n\ntype Items =\n  | {\n      id: string;\n      imageUrl: string;\n      title: string;\n      types: number[];\n      sizes: number[];\n      price: number;\n      category: number;\n      rating: number;\n    }[]\n  | 'Not found';\n\nexport const Home = () => {\n  const [items, setItems] = useState<Items>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  // const UpdateCurrentPageValue = (n: number) => {\n  //   setCurrentPage(n)\n  // }\n\n  const page = `page=${currentPage}`;\n\n  /**================================================================================================\n   * !                                          SORTING logic\n   *   select activeSortType from store useSelect (state.filter.activeSortType)\n   *   create object sortBy that will be determine connection between activeSortType and backendSortType\n   *   creating variable for inserting it as url parametr\n   *   passing activeSortType to useEffect for requesting new data every time input has changed\n   *================================================================================================**/\n  const activeSortType = useSelector((state: RootState) => state.filter.activeSortType);\n\n  const sortBy = { популярности: 'rating', цене: 'price', алфавиту: 'title' };\n  const sort: string = `sortBy=${sortBy[activeSortType]}`;\n  /*========================================== END OF Sorting ==========================================*/\n\n  /**========================================================================\n   * !                              SEARCHING logic\n   *   select searchValue from store useSelect (state.search.searchValue)\n   *   creating variable for inserting it as url parametr\n   *   passing searchValue to useEffect for requesting new data every time input has changed\n   *========================================================================**/\n  const searchValue = useSelector((state: any) => state.search.searchValue);\n  const search = `search=${searchValue}`;\n  /*============================ END OF SEARCHING LOGIC ============================*/\n\n  /**========================================================================\n   * !                              FILTERING logic\n   *   select activeCategory from store useSelector (state.filter.activeCategory)\n   *   creating variable for inserting it as url parametr\n   *   passing activeCategory to useEffect for requesing data everytime input has changed\n   *========================================================================**/\n  const activeCategory = useSelector((state: any) => state.filter.activeCategory);\n  const category = activeCategory === 0 ? '' : `category=${activeCategory}`;\n  /*============================ END OF FILTERING LOGIC ============================*/\n\n  // useEffect(() => {\n  //   fetch(\n  //     `https://65dc9b63e7edadead7ec86ae.mockapi.io/items?&${page}&limit=5&${category}&${sort}&${search}`,\n  //   )\n  //     .then((res) => {\n  //       setIsLoading(true);\n  //       return res.json();\n  //     })\n  //     .then((res) => {\n  //       setTimeout(() => {\n  //         setItems(res);\n  //         setIsLoading(false);\n  //       }, 500);\n  //     });\n  // }, [activeCategory, activeSortType, searchValue, currentPage]);\n\n  // let pizzas = items\n  //   .filter((item) => {\n  //     return item['title'].toLowerCase().includes(searchValue.toLowerCase())\n  //   })\n  //   .map((item, index) => <PizzaBlock key={item.id} {...item} />);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://65dc9b63e7edadead7ec86ae.mockapi.io/items?&${page}&limit=5&${category}&${sort}&${search}`,\n      )\n      .then((res) => {\n        setTimeout(() => {\n          setItems(res.data);\n          setIsLoading(false);\n        }, 500);\n      })\n      .catch((err) => {\n        // console.log(err.response.data)\n        setItems(err.response.data);\n      });\n  }, [activeCategory, activeSortType, searchValue, currentPage]);\n\n  // console.log('HOME RENDER')\n\n  return (\n    <>\n      <Menu />\n      {items == 'Not found' ? (\n        ''\n      ) : (\n        <div className={s.pizza__list}>\n          {\n            isLoading\n              ? [...new Array(5)].map((_, index) => <Loader key={index} />)\n              : items.map((item, index) => <PizzaBlock key={index} {...item} />) /* pizzas */\n          }\n        </div>\n      )}\n\n      <Pagination setCurrentPage={setCurrentPage} />\n      {/* <ExampleComponent/> */}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}