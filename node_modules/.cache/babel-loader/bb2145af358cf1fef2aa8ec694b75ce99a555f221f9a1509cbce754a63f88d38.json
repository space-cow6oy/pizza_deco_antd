{"ast":null,"code":"var _jsxFileName = \"/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card } from 'antd';\nimport { Radio } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PizzaBlock = ({\n  id,\n  imageUrl,\n  price,\n  sizes,\n  title,\n  types\n}) => {\n  _s();\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n  const firstRenderTPizzaTypes = types.map(item => pizzaTypes[item]);\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.cart.items);\n  const {\n    Meta\n  } = Card;\n  console.log(types);\n  const cartClick = () => {\n    dispatch(addToCart({\n      id: realId.current,\n      imageUrl,\n      price,\n      activeSize: realSize,\n      title,\n      activeType: pizzaTypes[activeType],\n      count: 1\n    }));\n  };\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n    // onChange={ (e: RadioChangeEvent) => setActiveType(e.target.value)}\n    _jsxDEV(Card, {\n      hoverable: true,\n      style: {\n        width: 240\n      },\n      cover: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: title,\n        src: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 51\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n        options: firstRenderTPizzaTypes,\n        onChange: e => setActiveType(console.log(e)),\n        value: pizzaTypes[activeType],\n        optionType: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(PizzaBlock, \"gmb8zW0s81yMedf+S20YzbeffMk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PizzaBlock;\nvar _c;\n$RefreshReg$(_c, \"PizzaBlock\");","map":{"version":3,"names":["useRef","useState","addToCart","useDispatch","useSelector","Card","Radio","jsxDEV","_jsxDEV","PizzaBlock","id","imageUrl","price","sizes","title","types","_s","pizzaTypes","firstRenderTPizzaTypes","map","item","activeType","setActiveType","activeSize","setActiveSize","realSize","realId","dispatch","items","state","cart","Meta","console","log","cartClick","current","count","hoverable","style","width","cover","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","children","Group","options","onChange","e","value","optionType","_c","$RefreshReg$"],"sources":["/home/artem/github_space/pizza_antd/pizza_deco_antd/src/components/PizzaBlock/PizzaBlock.tsx"],"sourcesContent":["import { FC, useCallback, useRef, useState } from 'react';\nimport styles from './PizzaBlock.module.scss';\nimport cl from 'classnames';\nimport { addToCart } from '../../redux/slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { Card } from 'antd';\nimport type { CheckboxOptionType, RadioChangeEvent } from 'antd';\nimport { CheckboxValueType } from 'antd/es/checkbox/Group';\nimport { Input, Radio, Space } from 'antd';\n\ntype PizzaBlockProps = {\n  id: string;\n  imageUrl: string;\n  price: number;\n  sizes: number[];\n  title: string;\n  types: number[];\n};\n\nexport const PizzaBlock: FC<PizzaBlockProps> = ({ id, imageUrl, price, sizes, title, types }) => {\n  const pizzaTypes = ['Тонкое', 'Традиционное'];\n  const firstRenderTPizzaTypes = types.map(item => pizzaTypes[item])\n\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n\n  const realSize = sizes[activeSize];\n  const realId = useRef(id);\n\n  const dispatch = useDispatch();\n  const items = useSelector((state: any) => state.cart.items);\n\n  const { Meta } = Card;\n\n  console.log(types);\n\n  const cartClick = () => {\n    dispatch(\n      addToCart({\n        id: realId.current,\n        imageUrl,\n        price,\n        activeSize: realSize,\n        title,\n        activeType: pizzaTypes[activeType],\n        count: 1,\n      }),\n    );\n  };\n\n  type Option = (string | number | CheckboxOptionType<CheckboxValueType>) | undefined;\n\n  return (\n    // <>\n    //   <div className={styles.pizza_container}>\n    //     <div>\n    //       <img className={styles.img} src={imageUrl} alt={title} />\n    //     </div>\n    //     <div>\n    //       <h3 className={styles.h3}>{title}</h3>\n    //       <div className={styles.switch}>\n    //         <div className={styles.switch__type}>\n    //           {types.map((type, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveType(index)}\n    //               className={\n    //                 activeType === index\n    //                   ? cl(styles.type__span, styles.type__span_active)\n    //                   : cl(styles.type__span)\n    //               }>\n    //               {pizzaTypes[type]}\n    //             </span>\n    //           ))}\n    //         </div>\n    //         <div className={styles.switch__size}>\n    //           {sizes.map((size, index) => (\n    //             <span\n    //               key={index}\n    //               onClick={() => setActiveSize(index)}\n    //               className={\n    //                 activeSize === index\n    //                   ? cl(styles.size__span, styles.size__span_active)\n    //                   : cl(styles.size__span)\n    //               }>\n    //               {' '}\n    //               {size}{' '}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </div>\n    //       <div className={styles.price_and_button}>\n    //         <span>от {price} Р</span>\n    //         <Button onClick={cartClick}>\n    //         <span>Добавить </span>\n    //         </Button >\n    //         {/* <button onClick={cartClick} className={styles.button}>\n    //           <span>Добавить </span>\n    //         </button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </>\n    // onChange={ (e: RadioChangeEvent) => setActiveType(e.target.value)}\n\n    <Card hoverable style={{ width: 240 }} cover={<img alt={title} src={imageUrl} />}>\n      <Meta title={title} />\n        \n\n\n      <Radio.Group options={firstRenderTPizzaTypes} onChange={(e) => setActiveType(console.log(e))} value={pizzaTypes[activeType]} optionType=\"button\" />\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}